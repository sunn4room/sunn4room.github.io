(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{589:function(t,a,s){t.exports=s.p+"assets/img/container.b9f3b73e.svg"},590:function(t,a,s){t.exports=s.p+"assets/img/beanfactory.7121ac00.svg"},591:function(t,a,s){t.exports=s.p+"assets/img/applicationcontext.b61b1b34.svg"},592:function(t,a,s){t.exports=s.p+"assets/img/aspect.590e3b50.svg"},593:function(t,a,s){t.exports=s.p+"assets/img/advice.88dead87.svg"},594:function(t,a,s){t.exports=s.p+"assets/img/pointcut.8047ddc9.svg"},595:function(t,a,s){t.exports=s.p+"assets/img/advisor.f7bac45e.svg"},596:function(t,a,s){t.exports=s.p+"assets/img/proxycreator.aff8e6de.svg"},668:function(t,a,s){"use strict";s.r(a);var n=s(52),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"spring-学习笔记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-学习笔记"}},[t._v("#")]),t._v(" Spring 学习笔记")]),t._v(" "),n("p",[t._v("Spring是一个轻量级控制反转(IoC)和面向切面(AOP)的容器框架，并由此衍生出了一个庞大的生态体系。")]),t._v(" "),n("h2",{attrs:{id:"spring-容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-容器"}},[t._v("#")]),t._v(" Spring 容器")]),t._v(" "),n("h3",{attrs:{id:"容器组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器组件"}},[t._v("#")]),t._v(" 容器组件")]),t._v(" "),n("p",[n("img",{attrs:{src:s(589),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"beanfactory"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory"}},[t._v("#")]),t._v(" BeanFactory")]),t._v(" "),n("p",[t._v("提供了高级配置机制来管理任何类型的容器内对象")]),t._v(" "),n("p",[n("img",{attrs:{src:s(590),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"applicationcontext"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#applicationcontext"}},[t._v("#")]),t._v(" ApplicationContext")]),t._v(" "),n("p",[t._v("这就是 Spring 容器的标准接口，在 BeanFactory 的基础上，添加了一下主要特性：")]),t._v(" "),n("ul",[n("li",[t._v("自动实例化 Singleton")]),t._v(" "),n("li",[t._v("自动注册各种后处理器")]),t._v(" "),n("li",[t._v("国际化")]),t._v(" "),n("li",[t._v("容器内事件发布")]),t._v(" "),n("li",[t._v("配置资源管理")]),t._v(" "),n("li",[t._v("容器生命周期管理")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(591),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"resource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resource"}},[t._v("#")]),t._v(" Resource")]),t._v(" "),n("p",[t._v("Spring 容器支持两种资源配置形式：")]),t._v(" "),n("ul",[n("li",[t._v("XML-based Config")]),t._v(" "),n("li",[t._v("Java-based Config（我只关注这种形式）")])]),t._v(" "),n("blockquote",[n("p",[t._v("Spring 还支持另一种独特的配置形式，那就是 Annotation 注解，即将配置信息放到源代码中存放，从而降低了 XML-based 和 Java-based 里的复杂度")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.xxx.XxxConfig"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入其他配置类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XxxConfig")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"beandefination"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beandefination"}},[t._v("#")]),t._v(" BeanDefination")]),t._v(" "),n("p",[t._v("包含了一下主要信息：")]),t._v(" "),n("ul",[n("li",[t._v("类型信息")]),t._v(" "),n("li",[t._v("行为信息")]),t._v(" "),n("li",[t._v("依赖信息")]),t._v(" "),n("li",[t._v("属性信息")])]),t._v(" "),n("p",[t._v("ClassPathScanningCandidateComponentProvider")]),t._v(" "),n("p",[t._v("ClassPathBeanDefinitionScanner")]),t._v(" "),n("h3",{attrs:{id:"容器配置-注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器配置-注解"}},[t._v("#")]),t._v(" 容器配置（注解）")]),t._v(" "),n("h4",{attrs:{id:"profile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" @Profile")]),t._v(" "),n("p",[t._v("标识应用不同的环境。外部使用时可以激活一个或多个 profile 标识")]),t._v(" "),n("h4",{attrs:{id:"configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" @Configuration")]),t._v(" "),n("p",[t._v("声明为一个 Java-based Config")]),t._v(" "),n("h4",{attrs:{id:"import"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" @Import")]),t._v(" "),n("p",[t._v("引入外部 Bean 配置")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通的配置类或组件类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSelector 的实现类，根据注解元数据返回全限定类名的字符串数组，这些类可以是普通的配置类或组件类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportBeanDefinitionRegistrar 的实现类，根据注解元数据注册 BeanDefinition")]),t._v("\n")])])]),n("h4",{attrs:{id:"bean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bean"}},[t._v("#")]),t._v(" @Bean")]),t._v(" "),n("p",[t._v("被修饰方法的返回值会被当做一个 bean")]),t._v(" "),n("h4",{attrs:{id:"componentscan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#componentscan"}},[t._v("#")]),t._v(" @ComponentScan")]),t._v(" "),n("p",[t._v("和 @Component 配合完成 bean 的扫描添加")]),t._v(" "),n("h4",{attrs:{id:"component"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#component"}},[t._v("#")]),t._v(" @Component")]),t._v(" "),n("p",[t._v("和 @ComponentScan 配合完成 bean 的扫描添加，类似的注解还有：@Controller（Prototype）、@Service、@Repository")]),t._v(" "),n("h4",{attrs:{id:"scope"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[t._v("#")]),t._v(" @Scope")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("描述")]),t._v(" "),n("th",[t._v("适用场景")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("singleton")]),t._v(" "),n("td",[t._v("会被添加到容器缓存中，每次请求Bean时都返回同一个实例")]),t._v(" "),n("td",[t._v("无状态 Bean")])]),t._v(" "),n("tr",[n("td",[t._v("prototype")]),t._v(" "),n("td",[t._v("不会被添加到容器缓存中，每次请求Bean时都会新建一个实例出来。")]),t._v(" "),n("td",[t._v("有状态 Bean")])])])]),t._v(" "),n("h5",{attrs:{id:"lookup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lookup"}},[t._v("#")]),t._v(" @Lookup")]),t._v(" "),n("p",[t._v("当 singleton bean 依赖一个 prototype bean 时，prototype 的性质就被破坏了，解决方案如下：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// singleton class define")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySingleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Lookup")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyPrototype")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myPrototype")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 调用 myPrototype 方法获取 prototype 性质的 bean")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"lazy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lazy"}},[t._v("#")]),t._v(" @Lazy")]),t._v(" "),n("p",[t._v("如果不希望容器初始化之后立即初始化指定 singleton bean ，可以设置延迟加载行为")]),t._v(" "),n("h4",{attrs:{id:"postconstruct"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#postconstruct"}},[t._v("#")]),t._v(" @PostConstruct")]),t._v(" "),n("p",[t._v("指定 bean 实例化之后的行为方法")]),t._v(" "),n("h4",{attrs:{id:"predestroy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#predestroy"}},[t._v("#")]),t._v(" @PreDestroy")]),t._v(" "),n("p",[t._v("指定 bean 实例销毁之前的行为方法")]),t._v(" "),n("h4",{attrs:{id:"dependson"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dependson"}},[t._v("#")]),t._v(" @DependsOn")]),t._v(" "),n("p",[t._v("在初始化当前 bean 之前初始化指定的 bean")]),t._v(" "),n("h3",{attrs:{id:"容器生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器生命周期"}},[t._v("#")]),t._v(" 容器生命周期")]),t._v(" "),n("p",[t._v("spring 容器相当于一个复杂的工厂，这个工厂可以输入任何一个 POJO，容器中称为 Bean，并有效处理 Bean 之间的耦合后输出。")]),t._v(" "),n("p",[t._v("而其中的一道道处理工序是由一些 Spring Bean 负责完成的，也就是说，Spring 自身面向处理流程规定了一系列的接口，要想参与到 Spring 的处理流程中，就必须实现响应的接口，并被 Spring 识别生效。")]),t._v(" "),n("p",[t._v("想要认识到这些接口就必须了解容器的整个生命周期是怎样的，如图：")]),t._v(" "),n("ul",[n("li",[t._v("BeanDefinitionRegistryPostProcessor's "),n("strong",[t._v("postProcessBeanDefinitionRegistry")])]),t._v(" "),n("li",[t._v("BeanFactoryPostProcessor's "),n("strong",[t._v("postProcessBeanFactory")])]),t._v(" "),n("li",[t._v("InstantiationAwareBeanPostProcessor's "),n("strong",[t._v("postProcessBeforeInstantiation")])]),t._v(" "),n("li",[t._v("SmartInstantiationAwareBeanPostProcessor's "),n("strong",[t._v("determineCandidateConstructors")])]),t._v(" "),n("li",[t._v("MergedBeanDefinitionPostProcessor's "),n("strong",[t._v("postProcessMergedBeanDefinition")])]),t._v(" "),n("li",[t._v("SmartInstantiationAwareBeanPostProcessor's "),n("strong",[t._v("getEarlyBeanReference")])]),t._v(" "),n("li",[t._v("InstantiationAwareBeanPostProcessor's "),n("strong",[t._v("postProcessAfterInstantiation")])]),t._v(" "),n("li",[t._v("InstantiationAwareBeanPostProcessor's "),n("strong",[t._v("postProcessPropertyValues")])]),t._v(" "),n("li",[t._v("BeanNameAware、BeanClassLoaderAware、BeanFactoryAware、EnvironmentAware、EmbeddedValueResolverAware、ResourceLoaderAware、ApplicationEventPublisherAware、MessageSourceAware、ApplicationContextAware、ServletContextAware's "),n("strong",[t._v("setXxx")])]),t._v(" "),n("li",[t._v("BeanPostProcessor's "),n("strong",[t._v("postProcessBeforeInitialization")])]),t._v(" "),n("li",[t._v("InitializingBean's "),n("strong",[t._v("afterPropertiesSet")])]),t._v(" "),n("li",[t._v("BeanPostProcessor's "),n("strong",[t._v("postProcessAfterInitialization")])]),t._v(" "),n("li",[t._v("FactoryBean's "),n("strong",[t._v("getObject")])]),t._v(" "),n("li",[t._v("DestructionAwareBeanPostProcessors's "),n("strong",[t._v("postProcessBeforeDestruction")])]),t._v(" "),n("li",[t._v("DisposableBean's "),n("strong",[t._v("destroy")])])]),t._v(" "),n("h3",{attrs:{id:"容器事件与监听器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器事件与监听器"}},[t._v("#")]),t._v(" 容器事件与监听器")]),t._v(" "),n("h2",{attrs:{id:"控制反转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制反转"}},[t._v("#")]),t._v(" 控制反转")]),t._v(" "),n("p",[t._v("Inversion of Control (IoC) 是 bean 的依赖关系的控制不再需要额外代码维护，而是交给 Spring 容器全权负责。")]),t._v(" "),n("h3",{attrs:{id:"autowired"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#autowired"}},[t._v("#")]),t._v(" @Autowired")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("采用byType自动注入,由Spring提供,需要导入org.springframework.beans.factory.annotation.Autowired\n默认情况要求对象必须存在,如果需要为null,可以设置它的required=true\n如果接口存在多个实现类,我们依然可以byName自动注入:通过与@Qualifier搭配使用\n即先byType,byType匹配到多个时,再通过byName\n")])])]),n("h4",{attrs:{id:"primary"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#primary"}},[t._v("#")]),t._v(" @Primary")]),t._v(" "),n("h4",{attrs:{id:"qualifier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qualifier"}},[t._v("#")]),t._v(" @Qualifier")]),t._v(" "),n("h3",{attrs:{id:"resource-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resource-2"}},[t._v("#")]),t._v(" @Resource")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("默认按照byName自动注入,由J2EE提供,需要导入javax.annotation.Resource\n它有两个重要的属性name和type,而Spring将@Resource注解的name属性解析为bean的名字,而type属性则解析为bean的类型\n所以,如果使用name属性,则使用byName的自动注入策略,而使用type属性时则使用byType自动注入策略\n如果name和type属性都未指定,则默认byName注入,byName未找到时,会继续采用byType注入\n")])])]),n("h3",{attrs:{id:"value"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" @Value")]),t._v(" "),n("h4",{attrs:{id:"configurationproperties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configurationproperties"}},[t._v("#")]),t._v(" ＠ConfigurationProperties")]),t._v(" "),n("h5",{attrs:{id:"nestedconfigurationproperty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nestedconfigurationproperty"}},[t._v("#")]),t._v(" @NestedConfigurationProperty")]),t._v(" "),n("h5",{attrs:{id:"enableconfigurationproperties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enableconfigurationproperties"}},[t._v("#")]),t._v(" @EnableConfigurationProperties")]),t._v(" "),n("h4",{attrs:{id:"propertysource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#propertysource"}},[t._v("#")]),t._v(" @PropertySource")]),t._v(" "),n("h3",{attrs:{id:"objectprovider"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#objectprovider"}},[t._v("#")]),t._v(" ObjectProvider")]),t._v(" "),n("p",[t._v("半自动依赖注入，过程中提供了类型检查，比如唯一性检查、存在性检查等")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FooService")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),t._v(" xx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FooService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectProvider")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" repositoryProvider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" repositoryProvider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIfUnique")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"数据管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据管理"}},[t._v("#")]),t._v(" 数据管理")]),t._v(" "),n("h2",{attrs:{id:"面向切面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面向切面"}},[t._v("#")]),t._v(" 面向切面")]),t._v(" "),n("p",[t._v("Aspect-oriented Programming （AOP）是对 Object-oriented Programming （OOP）的补充，使得不同类型的对象也可以通过某种规范联系起来一起拓展新功能。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(592),alt:""}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("join point：程序执行期间可以被切入的点，通常就是方法的执行")])]),t._v(" "),n("li",[n("p",[t._v("point cut：切入规则，用于筛选 join point")])]),t._v(" "),n("li",[n("p",[t._v("advice：符合 point cut 的 join point 将要被实施的增强处理")])]),t._v(" "),n("li",[n("p",[t._v("aspect：对于 point cut 和 advice 的模块化管理，可看做是一种声明")])]),t._v(" "),n("li",[n("p",[t._v("target object：受 point cut 影响的目标对象")])]),t._v(" "),n("li",[n("p",[t._v("weaving：连接相应的 aspect 到 target object")])]),t._v(" "),n("li",[n("p",[t._v("proxy：完成 weaving 后创建出来的代理对象")])])]),t._v(" "),n("h3",{attrs:{id:"aop-架构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aop-架构"}},[t._v("#")]),t._v(" AOP 架构")]),t._v(" "),n("p",[t._v("Spring AOP 借用了 AspectJ 的语法，但是织入过程是自己实现的。")]),t._v(" "),n("h4",{attrs:{id:"advice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#advice"}},[t._v("#")]),t._v(" Advice")]),t._v(" "),n("p",[n("img",{attrs:{src:s(593),alt:"advice"}})]),t._v(" "),n("p",[t._v("Spring AOP 只支持方法调用增强和引入增强")]),t._v(" "),n("h4",{attrs:{id:"pointcut"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pointcut"}},[t._v("#")]),t._v(" Pointcut")]),t._v(" "),n("p",[n("img",{attrs:{src:s(594),alt:"pointcut"}})]),t._v(" "),n("h4",{attrs:{id:"advisor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#advisor"}},[t._v("#")]),t._v(" Advisor")]),t._v(" "),n("p",[n("img",{attrs:{src:s(595),alt:"advisor"}})]),t._v(" "),n("h4",{attrs:{id:"proxyfactory"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxyfactory"}},[t._v("#")]),t._v(" ProxyFactory")]),t._v(" "),n("p",[t._v("Spring 只支持运行期织入：")]),t._v(" "),n("ul",[n("li",[t._v("JDK 动态代理：实现目标对象的接口完成接口方法的代理")]),t._v(" "),n("li",[t._v("CGLIB 代理：继承目标对象完成全方法的代理")])]),t._v(" "),n("h4",{attrs:{id:"proxyfactorybean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxyfactorybean"}},[t._v("#")]),t._v(" ProxyFactoryBean")]),t._v(" "),n("h4",{attrs:{id:"abstractautoproxycreator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstractautoproxycreator"}},[t._v("#")]),t._v(" AbstractAutoProxyCreator")]),t._v(" "),n("p",[n("img",{attrs:{src:s(596),alt:"proxycreator"}})]),t._v(" "),n("h3",{attrs:{id:"开启-aspectj-支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开启-aspectj-支持"}},[t._v("#")]),t._v(" 开启 AspectJ 支持")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAspectJAutoProxy")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppConfig")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("@EnableAspectJAutoProxy 的两个属性含义")]),t._v(" "),n("ul",[n("li",[t._v("proxyTargetClass：是否强制使用 CGLIB")]),t._v(" "),n("li",[t._v("exposeProxy：是否暴露代理对象到 AopContext，如果是的话，可以在内部通过 AopContext.currentProxy() 访问到当前的代理对象，一般应用在代理方法嵌套调用的情景中")])])]),t._v(" "),n("h3",{attrs:{id:"声明-aspect-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#声明-aspect-类"}},[t._v("#")]),t._v(" 声明 Aspect 类")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Aspect")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NotVeryUsefulAspect")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"声明-point-cut"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#声明-point-cut"}},[t._v("#")]),t._v(" 声明 Point Cut")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pointcut")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<切入点表达式>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("引用名"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"execution"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#execution"}},[t._v("#")]),t._v(" execution")]),t._v(" "),n("p",[t._v("方法描述")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("execution([<方法修饰符>] <返回值类型> [<宿主类>.]<方法名>(<形参类型列表>) [<抛出的异常>])\n")])])]),n("blockquote",[n("ul",[n("li",[n("code",[t._v("*")]),t._v(" 匹配单个无间隔符序列")]),t._v(" "),n("li",[n("code",[t._v("..")]),t._v(" 匹配零个和多个无间隔符序列并用间隔符连接起来")]),t._v(" "),n("li",[n("code",[t._v("+")]),t._v(" 匹配指定类型的子类型；仅能作为后缀放在类型模式后边")])])]),t._v(" "),n("h4",{attrs:{id:"within"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#within"}},[t._v("#")]),t._v(" within")]),t._v(" "),n("p",[t._v("无继承关系的类型描述")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("within(<包名>.<类名>)\n")])])]),n("h4",{attrs:{id:"within-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#within-2"}},[t._v("#")]),t._v(" @within")]),t._v(" "),n("p",[t._v("对含有指定注解的当前类的独占方法有效，通过子类对象调用到当前类对象的方法时也有效")]),t._v(" "),n("h4",{attrs:{id:"target"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#target"}},[t._v("#")]),t._v(" target")]),t._v(" "),n("p",[t._v("有继承关系的类型描述")]),t._v(" "),n("h4",{attrs:{id:"target-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#target-2"}},[t._v("#")]),t._v(" @target")]),t._v(" "),n("p",[t._v("对含有指定注解的当前类的所有可用方法有效，包括继承来的")]),t._v(" "),n("h4",{attrs:{id:"this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),n("p",[t._v("JDK 动态代理：目标对象的接口的有继承关系的类型描述")]),t._v(" "),n("p",[t._v("CGLIB 代理：同 target")]),t._v(" "),n("h4",{attrs:{id:"args"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#args"}},[t._v("#")]),t._v(" args")]),t._v(" "),n("p",[t._v("参数的有继承关系的类型描述")]),t._v(" "),n("h4",{attrs:{id:"args-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#args-2"}},[t._v("#")]),t._v(" @args")]),t._v(" "),n("p",[t._v("当方法的参数的类型上还有指定的注解时有效")]),t._v(" "),n("h4",{attrs:{id:"annotation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#annotation"}},[t._v("#")]),t._v(" @annotation")]),t._v(" "),n("p",[t._v("方法上还有指定注解时有效")]),t._v(" "),n("h4",{attrs:{id:"bean-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bean-2"}},[t._v("#")]),t._v(" bean")]),t._v(" "),n("p",[t._v("对 Spring 容器中的 bean name 的描述")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("bean(<bean 名称>)\n")])])]),n("h4",{attrs:{id:"逻辑组合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逻辑组合"}},[t._v("#")]),t._v(" 逻辑组合")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("xxx && xxx\nxxx || xxx\n! xxx\n")])])]),n("h3",{attrs:{id:"声明-advice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#声明-advice"}},[t._v("#")]),t._v(" 声明 Advice")]),t._v(" "),n("h4",{attrs:{id:"joinpoint-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#joinpoint-接口"}},[t._v("#")]),t._v(" JoinPoint  接口")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Object[] getArgs()")]),t._v("：返回参数列表")]),t._v(" "),n("li",[n("code",[t._v("Object getThis()")]),t._v("：返回代理对象")]),t._v(" "),n("li",[n("code",[t._v("Object getTarget()")]),t._v("：返回目标对象")])]),t._v(" "),n("h5",{attrs:{id:"proceedingjoinpoint-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proceedingjoinpoint-接口"}},[t._v("#")]),t._v(" ProceedingJoinPoint 接口")]),t._v(" "),n("p",[t._v("继承自 JoinPoint")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Object proceed()")]),t._v("：执行")])]),t._v(" "),n("h4",{attrs:{id:"before"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#before"}},[t._v("#")]),t._v(" before")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" jp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"after-returning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#after-returning"}},[t._v("#")]),t._v(" after returning")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AfterReturning")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pointcut"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("returning"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"r"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" jp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"after-throwing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#after-throwing"}},[t._v("#")]),t._v(" after throwing")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AfterThrowing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pointcut"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("throwing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"e"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" jp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Xxx")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"after-finally"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#after-finally"}},[t._v("#")]),t._v(" after finally")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@After")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" jp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"around"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#around"}},[t._v("#")]),t._v(" around")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Around")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProceedingJoinPoint")]),t._v(" pjp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start stopwatch")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" retVal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pjp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("proceed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stop stopwatch")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" retVal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"类型描述在-advice-中的特殊用途"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型描述在-advice-中的特殊用途"}},[t._v("#")]),t._v(" 类型描述在 Advice 中的特殊用途")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"args(param)"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("参数类型"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"introduction-新接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-新接口"}},[t._v("#")]),t._v(" Introduction 新接口")]),t._v(" "),n("p",[t._v("对指定类型的对象引入新的接口增强功能。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DeclareParents")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<类型描述>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultImpl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("默认实现"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("新的增强接口"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mixin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);